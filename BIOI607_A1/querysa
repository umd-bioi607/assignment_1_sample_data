#!/usr/bin/env python3


def query(genome, sa, query):
    lower_bound = -1
    upper_bound = -1
    return (lower_bound, upper_bound, lb_cmp, ub_cmp)

def query_sa(index_path, queries, query_mode, output_path):
    import pickle

    (genome, sa) = pickle.load(open(index_path, 'rb'))
    print(f"Genome length : {len(genome)}, len SA : {len(sa)}, last genome char {genome[-1]}")

    with open(output_path, 'w') as ofile:
        ## iterate over the FASTA records of the query file and lookup the patterns
        if query_mode == "naive":
            # query
            (lb, ub, lb_cmp, ub_cmp) = query(genome, sa, sequence)
            k = (ub - lb)
            # write the output
            ofile.write(f"{name}\t{lb_cmp}\t{ub_cmp}\t{k}")
            if k > 0:
                ents = [sa[e] for e in range(lb, ub)]
                ofile.write(f"\t{'\t'.join(ents)}")
            ofile.write("\n")
        elif query_mode == "simpaccel"
            # query
            (lb, ub, lb_cmp, ub_cmp) = query(genome, sa, sequence)
            k = (ub - lb)
            # write the output
            ofile.write(f"{name}\t{lb_cmp}\t{ub_cmp}\t{k}")
            if k > 0:
                ents = [sa[e] for e in range(lb, ub)]
                ofile.write(f"\t{'\t'.join(ents)}")
            ofile.write("\n")

if __name__ == "__main__":
    import sys
    index_path = sys.argv[1]
    queries = sys.argv[2]
    query_mode = sys.argv[3]
    if query_mode not in ["naive", "simpaccel"]:
        print(f"The only recognized query modes are \"naive\" and \"simpaccel\" and you passed {query_mode}")
        sys.exit(1)
    output = sys.argv[4]

    inspect_sa(index_path, sample_rate, output)
